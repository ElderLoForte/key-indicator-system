name: Bert Dev Branch

on:
  workflow_dispatch:
  push:
    branches: [CI-modifications]
  release:
    types: [published]
  schedule:
    - cron: "0 0 * * SUN"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Install clasp
        id: install-clasp
        run: sudo npm install @google/clasp@2.4.1 -g

      - name: Write CLASPRC_JSON secret to .clasprc.json file
        id: write-clasprc
        run: echo "$CLASPRC_JSON_SECRET" >> ~/.clasprc.json
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}

      - name: Check clasp login status
        id: clasp_login
        run: clasp login --status

      - name: Save current .clasprc.json contents to CLASPRC_JSON_FILE environment variable
        id: save-clasprc
        run: |
          echo ::add-mask::$(tr -d '\n\r' < ~/.clasprc.json)
          echo "CLASPRC_JSON_FILE=$(tr -d '\n\r' < ~/.clasprc.json)" >> $GITHUB_ENV        
      
      - name: Save CLASPRC_JSON_FILE environment variable to CLASPRC_JSON repo secret
        id: set-clasprc-secret
        if: ${{ env.CLASPRC_JSON_FILE != env.CLASPRC_JSON_SECRET  }}
        uses: hmanzur/actions-set-secret@v2.0.0
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}
        with:
          name: "CLASPRC_JSON"
          value: ${{ env.CLASPRC_JSON_FILE }}
          repository: ${{ github.repository }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Checkout repo
        id: checkout-repo
        if: ${{github.event_name	!= 'schedule' }}
        uses: actions/checkout@v2

      - name: get current contents of .clasp.json
        id: cat-clasp-1
        run: echo | cat .clasp.json

      -name: modify .clasp.json
        id: modify-clasp
        run: sed -i "s/SCRIPT_ID/$SCRIPTID/;s/PARENT_ID/$PARENTID/" .clasp.json
        env:
          SCRIPTID: ${{ secrets.BERT_INSTANCE_SCRIPT_ID }}
          PARENTID: ${{ secrets.BERT_PARENT_ID}}
      # 🐧- 
      # - name: Pipe in .clasp.json?
      #   id: pipe-clasp-json
      #   run: >
      #     echo '{"scriptId": "1ZBYoDTlOkOo1J2yfgxMKV4EFhRIhnrf5F81CoN9Hr3IkWdQfohOcKAGa","rootDir": "./","parentId": ["1Lm3tCkx7PKftV9wjxEMykwq9DQAChOqray0w5afUK30"]}' > .clasp.json
        #inputJSON='{"scriptId": "replaceWithScript","rootDir": "./","parentId": ["replaceWithParent"]}'
        #scriptId="1ZBYoDTlOkOo1J2yfgxMKV4EFhRIhnrf5F81CoN9Hr3IkWdQfohOcKAGa"
        #parentId="1Lm3tCkx7PKftV9wjxEMykwq9DQAChOqray0w5afUK30"
        #inBetween="${inputJSON/replaceWithScript/"$scriptId"}"
        #final="${inBetween/replaceWithParent/$parentId}"
        #echo "$final" > .clasp.json
        # echo '{"scriptId": "1ZBYoDTlOkOo1J2yfgxMKV4EFhRIhnrf5F81CoN9Hr3IkWdQfohOcKAGa","rootDir": "./","parentId": ["1Lm3tCkx7PKftV9wjxEMykwq9DQAChOqray0w5afUK30"]}' > .clasp.json
        # env:
        #   CLASP_JSON_SECRET: ${{ secrets.BERT_INSTANCE_CLASP_JSON }}
      # - name: test debug printing
      #   id: test-debug-echo
      #   run: echo "::debug::test $CLASP_JSON_SECRET"
        

      - name: get modified contents of .clasp.json
        id: cat-clasp-2
        run: echo | cat .clasp.json

      - name: Set scriptId in .clasp.json file
        id: set-script-id
        if: ${{ github.event_name	!= 'schedule' && env.SCRIPT_ID}}
        run: jq '.scriptId = "${{env.SCRIPT_ID}}"' .clasp.json > /tmp/.clasp.json && mv /tmp/.clasp.json .clasp.json
        env:
          SCRIPT_ID: ${{secrets.SCRIPT_ID}}

      - name: Push script to scripts.google.com
        id: clasp-push
        if: ${{ github.event_name	!= 'schedule'}}
        run: clasp push -f

      - name: Deploy Script
        id: clasp-deploy
        if: ${{env.DEPLOYMENT_ID && (github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main'))}}
        run: clasp deploy -i "$DEPLOYMENT_ID" -d "$GITHUB_REF"
        env:
          DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}
  # dump-context:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJSON(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJSON(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJSON(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJSON(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJSON(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"
